# # api 1
- hosts: reliabank1
  become: yes
  tasks:
    - name: Update and install tools
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - git
        - docker.io
        - docker-compose
        - nginx
        - certbot
        - python3-certbot-dns-cloudflare
    
    - name: Clone repository
      git:
        repo: 'https://github.com/sanjivkannaa/reliabank.git'
        dest: /home/admin/reliabank

    - name: Set env
      copy:
        # remote_src: yes
        src: .env
        dest: /home/admin/reliabank/.env

    - name: Copy certbot credentials
      copy:
        src: cloudflare.ini
        dest: /cloudflare.ini
        owner: admin
        group: admin
        mode: '400'

    - name: Obtain SSL/TLS Certificate with Certbot
      command: certbot certonly --dns-cloudflare --dns-cloudflare-credentials ~/.secrets/certbot/cloudflare.ini -d chaosbank1.magickite.tech
      register: certbot_result
      tags: obtain

    - name: Run docker-compose
      command: docker-compose --env-file=.env.example up -d
      args:
        chdir: /home/admin/reliabank

    - name: Copy Nginx configuration file
      template:
        src: nginx_conf/nginx1.conf
        dest: /etc/nginx/conf.d/chaosbank1.magickite.tech.conf
      notify:
        - Restart Nginx

    - name: Ensure Nginx is running
      service:
        name: nginx
        state: started
        enabled: yes

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

# api 2
- hosts: reliabank2
  become: yes
  tasks:
    - name: Update and install tools
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - git
        - docker.io
        - docker-compose
        - nginx
        - certbot
        - python3-certbot-dns-cloudflare
    
    - name: Clone repository
      git:
        repo: 'https://github.com/sanjivkannaa/reliabank.git'
        dest: /home/admin/reliabank

    - name: Set env
      copy:
        # remote_src: yes
        src: .env
        dest: /home/admin/reliabank/.env

    - name: Copy certbot credentials
      copy:
        src: cloudflare.ini
        dest: /cloudflare.ini
        owner: admin
        group: admin
        mode: '400'

    - name: Obtain SSL/TLS Certificate with Certbot
      command: certbot certonly --dns-cloudflare --dns-cloudflare-credentials ~/.secrets/certbot/cloudflare.ini -d chaosbank2.magickite.tech
      register: certbot_result
      tags: obtain

    - name: Run docker-compose
      command: docker-compose --env-file=.env.example up -d
      args:
        chdir: /home/admin/reliabank

    - name: Copy Nginx configuration file
      template:
        src: nginx_conf/nginx2.conf
        dest: /etc/nginx/conf.d/chaosbank2.magickite.tech.conf
      notify:
        - Restart Nginx

    - name: Ensure Nginx is running
      service:
        name: nginx
        state: started
        enabled: yes

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

# load balancer
- hosts: reliabank_lb
  become: yes
  tasks:
    - name: Update and install tools
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - git
        - docker.io
        - docker-compose
        - nginx
        - certbot
        - python3-certbot-dns-cloudflare
    
    - name: Copy certbot credentials
      copy:
        src: cloudflare.ini
        dest: /cloudflare.ini
        owner: admin
        group: admin
        mode: '400'

    - name: Obtain SSL/TLS Certificate with Certbot
      command: certbot certonly --dns-cloudflare --dns-cloudflare-credentials ~/.secrets/certbot/cloudflare.ini -d chaosbank.magickite.tech
      register: certbot_result
      tags: obtain

    - name: Copy Nginx configuration file
      template:
        src: nginx_conf/load_balancer.conf
        dest: /etc/nginx/conf.d/chaosbank.magickite.tech.conf
      notify:
        - Restart Nginx

    - name: Ensure Nginx is running
      service:
        name: nginx
        state: started
        enabled: yes
  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted